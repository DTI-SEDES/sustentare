def create_template_file():
    """Cria um template Excel para download"""
    
    # Dados de exemplo para o template
    template_dest = pd.DataFrame({
        'Ano': [2024, 2024, 2024],
        'MÃªs': ['JAN', 'FEV', 'MAR'],
        'Peso_kg': [1000, 1500, 1200]
    })
    
    template_doacao = pd.DataFrame({
        'Ano': [2024, 2024, 2024],
        'MÃªs': ['JAN', 'FEV', 'MAR'],
        'Quantidade': [50, 75, 60]
    })
    
    template_recebedores = pd.DataFrame({
        'Ano': [2024, 2024, 2024],
        'Recebedor': ['Entidade A', 'Entidade B', 'Entidade C'],
        'Quantidade': [25, 30, 20]
    })
    
    # Criar arquivo Excel em memÃ³ria
    output = io.BytesIO()
    with pd.ExcelWriter(output, engine='openpyxl') as writer:
        template_dest.to_excel(writer, sheet_name='destinacao', index=False)
        template_doacao.to_excel(writer, sheet_name='doacao', index=False)
        template_recebedores.to_excel(writer, sheet_name='recebedores', index=False)
    
    output.seek(0)
    return output

# Adicione esta funÃ§Ã£o no handler de upload
def add_template_download():
    """Adiciona botÃ£o para download do template"""
    st.sidebar.markdown("---")
    st.sidebar.markdown("### ðŸ“‹ Template")
    
    template = create_template_file()
    st.sidebar.download_button(
        label="ðŸ“¥ Baixar Template",
        data=template,
        file_name="template_sustentare.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        help="Baixe o template para preencher com seus dados"
    )
